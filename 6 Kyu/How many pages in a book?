DESCRIPTION:
Every book has n pages with page numbers 1 to n. The summary is made by adding up the number of digits of all page numbers.

Task: Given the summary, find the number of pages n the book has.

Example
If the input is summary=25, then the output must be n=17: The numbers 1 to 17 have 25 digits in total: 1234567891011121314151617.

Be aware that you'll get enormous books having up to 100.000 pages.

All inputs will be valid.

Here's the opposite kata, which is more complex (Paginating a huge book)

public class HowManyPagesInABook {
  
  public static int amountOfPages(int summary) {
    int N = summary, totalNumbersSoFar = 0, pagesSoFar = 0;
        StringBuilder nineSeries = new StringBuilder("9");
        while (Integer.parseInt(nineSeries.toString()) < (N / nineSeries.length())) {
            int numbersInRange = (int) (Math.pow(10, nineSeries.length() - 1) * 9);
            pagesSoFar += numbersInRange * (nineSeries.length());
            N -= numbersInRange;
            totalNumbersSoFar += numbersInRange;
            nineSeries.append("9");
        }
        return ((summary - pagesSoFar) / nineSeries.length()) + totalNumbersSoFar;
        
  }

}
